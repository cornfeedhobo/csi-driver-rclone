name: Release

on:
  push:
    tags:
      - v*

jobs:

  build:
    name: Release
    runs-on: ubuntu-latest
    steps:

      - name: Set job context
        id: context
        run: |
          echo "flags=$(printf '%s %s %s %s' \
              '--platform=linux/amd64,linux/arm,linux/arm64' \
              '--tag=docker.io/${{ github.repository }}:${{ github.ref == 'refs/heads/main' && 'latest' || github.ref_name }}' \
              '--tag=ghcr.io/${{ github.repository }}:${{ github.ref == 'refs/heads/main' && 'latest' || github.ref_name }}' \
              '--push' \
          )" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Check out ${{ github.repository }}
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install needed packages
        run: |
          sudo sh -c '
            apt update
            apt install -y fuse3
            echo "user_allow_other" >> /etc/fuse.conf
          '

      - name: Set up Go, using the version from go.mod
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Run test and build
        run: |
          export PATH=$PATH:$HOME/.local/bin
          go version
          make container \
            "GO_ARCH=amd64 arm arm64" \
            "GO_OS=linux" \
            "DOCKER_FLAGS=${{ steps.context.outputs.flags }}"

      - name: Upload build
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: actions/upload-artifact@v4
        with:
          path: bin/csi-driver-rclone*
